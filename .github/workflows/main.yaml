name: CI/CD api-ecommerce

env: 
  BUILD_NUMBER: ${{ github.run_number }}
  IMAGE_NAME: e-commerce-back

on:
    push:
        branches:
            - main

jobs:
    unit-test-job:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install dependencies
          run: npm install

        - name: Run static code analysis
          run: npm run test


    static-code-analysis-job:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install dependencies
          run: npm install

        - name: Run static code analysis
          run: npm run lint
        

    build-and-push:
      runs-on: ubuntu-latest
      needs: [static-code-analysis-job, unit-test-job]

      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Build docker image
            run: docker build -t ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} .
          
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: push latest image
            run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}

          - name: Tag image with version number
            run: docker tag ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }} ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}

          - name: push version image
            run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.BUILD_NUMBER }}
            
    Deploy:
      runs-on: ubuntu-latest  
      needs: build-and-push
      steps:
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@v1.2.0
          with:
            host: ${{ secrets.HOST }}
            username: ${{ vars.SSH_USERNAME }}
            password: ${{ secrets.PASSWORD }}
            script: |
              cd /home/ubuntu/devops-ecommerce/ecommerce-back
              sudo docker compose pull
              sudo docker compose up -d --force-recreate --remove-orphans
